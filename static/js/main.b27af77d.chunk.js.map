{"version":3,"sources":["pages/Location.js","pages/RouterPage.js","reduxStore.js","App.js","reportWebVitals.js","index.js"],"names":["Location","useState","longitude","setlongitude","lattitude","setlattitude","address","setaddress","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","fetch","then","response","json","data","display_name","RouterPage","exact","path","component","initialState","products","currentEditableProduct","LOAD_PRODUCT","UPDATE_PRODUCT","DELETE_PRODUCT","ADD_PRODUCT","updateProduct","payload","copyData","forEach","list","index","id","checkAndAddData","mergeData","Map","map","item","values","createStore","state","type","filter","App","store","Store","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAgCeA,MA9Bf,WAAqB,IAAD,EACgBC,mBAAS,MADzB,mBACXC,EADW,KACAC,EADA,OAEgBF,mBAAS,MAFzB,mBAEXG,EAFW,KAEAC,EAFA,OAGYJ,mBAAS,IAHrB,mBAGXK,EAHW,KAGFC,EAHE,KAuBlB,OAlBAC,qBAAU,WACRC,UAAUC,YAAYC,oBAAmB,SAAUC,GACjDT,EAAaS,EAASC,OAAOX,WAC7BG,EAAaO,EAASC,OAAOC,eAE9B,IACHN,qBAAU,WACJN,GAAaE,GACfW,MAAM,yFAAD,OACsFX,EADtF,gBACuGF,EADvG,iBAGFc,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLZ,EAAWY,EAAKC,mBAGrB,CAAClB,EAAWE,IAGb,8BACE,6BAAKE,OCZIe,EAXI,WACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UAEI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxB,S,uBCJ3CyB,EAAe,CACjBC,SAAU,GACVC,uBAAwB,MAKtBC,EAAe,eACfC,EAAiB,iBACjBC,EAAiB,iBACjBC,EAAc,cAsCdC,EAAgB,SAACN,EAAUO,GAC7B,IAAMC,EAAQ,YAAOR,GAMrB,OALAQ,EAASC,SAAQ,SAACC,EAAMC,GAChBD,EAAKE,KAAOL,EAAQK,KACpBJ,EAASG,GAASJ,MAGnBC,GAGLK,EAAkB,SAACH,EAAMH,GAE3B,IAAMO,EAAS,sBAAOJ,GAAP,YAAgBH,IAG/B,OAFU,YAAO,IAAIQ,IAAID,EAAUE,KAAI,SAAAC,GAAI,MACvC,EAAEA,EAAKL,GAAIK,OAAQC,WAkCZC,eA7BC,WAA8C,IAA7CC,EAA4C,uDAApCrB,EAAoC,yCAApBsB,EAAoB,EAApBA,KAAMd,EAAc,EAAdA,QAC3C,OAAQc,GACJ,KAAKnB,EACD,OAAO,2BACAkB,GADP,IAEIpB,SAAUa,EAAgBO,EAAMpB,SAAUO,KAElD,KAAKJ,EACD,OAAO,2BACAiB,GADP,IAEIpB,SAAUM,EAAcc,EAAMpB,SAAUO,KAEhD,KAAKH,EACD,OAAO,2BACAgB,GADP,IAEIpB,SAAUoB,EAAMpB,SAASsB,QAAO,SAAAZ,GAAI,OAAIA,EAAKE,KAAOL,OAG5D,KAAKF,EACD,OAAO,2BACAe,GADP,IAEIpB,SAAS,GAAD,mBAAMoB,EAAMpB,UAAZ,CAAsBO,MAGtC,QACI,OAAOa,KAIiBrB,GCtFrBwB,MAVf,WACE,OACE,cAAC,IAAD,CAAUC,MAAOC,EAAjB,SACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,SCGOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b27af77d.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nfunction Location() {\n  const [longitude, setlongitude] = useState(null);\n  const [lattitude, setlattitude] = useState(null);\n  const [address, setaddress] = useState(\"\");\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(function (position) {\n      setlongitude(position.coords.longitude);\n      setlattitude(position.coords.latitude);\n    });\n  }, []);\n  useEffect(() => {\n    if (longitude && lattitude) {\n      fetch(\n        `https://us1.locationiq.com/v1/reverse.php?key=pk.e6d1fde852928ce06b39b567a056afc3&lat=${lattitude}&lon=${longitude}&format=json`\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          setaddress(data.display_name);\n        });\n    }\n  }, [longitude, lattitude]);\n\n  return (\n    <div>\n      <h3>{address}</h3>\n    </div>\n  );\n}\n\nexport default Location;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\n// import Home from './Home';\nimport Location from './Location'\n\nconst RouterPage = () => {\n    return (\n        <BrowserRouter>\n            <Switch>\n                {/* <Route exact path='/location' component={Location} /> */}\n                <Route exact path='*' component={Location} />\n            </Switch>\n        </BrowserRouter>\n    )\n}\n\nexport default RouterPage;","import { createStore } from \"redux\";\n\n// createStore\n\n\nconst initialState = {\n    products: [],\n    currentEditableProduct: null,\n}\n\n// action type constants\n\nconst LOAD_PRODUCT = 'LOAD_PRODUCT';\nconst UPDATE_PRODUCT = 'UPDATE_PRODUCT';\nconst DELETE_PRODUCT = 'DELETE_PRODUCT';\nconst ADD_PRODUCT = 'ADD_PRODUCT';\n\n\n// actions\n\nconst loadProductsActions = (payload) => {\n    return {\n        type: LOAD_PRODUCT,\n        payload,\n    }\n}\n\nconst updateProductAction = (payload) => {\n    return {\n        type: UPDATE_PRODUCT,\n        payload\n    }\n}\n\nconst deleteProductAction = (payload) => {\n    return {\n        type: DELETE_PRODUCT,\n        payload\n    }\n}\n\nconst addNewProduct = (payload) => {\n    return {\n        type: ADD_PRODUCT,\n        payload,\n    }\n}\n\n\n\nexport { loadProductsActions, updateProductAction, deleteProductAction, addNewProduct }\n// Reducer \n\nconst updateProduct = (products, payload) => {\n    const copyData = [...products];\n    copyData.forEach((list, index) => {\n        if (list.id === payload.id) {\n            copyData[index] = payload;\n        }\n    })\n    return copyData;\n}\n\nconst checkAndAddData = (list, payload) => {\n    // This code is written to avoid duplicate data with same id \n    const mergeData = [...list, ...payload];\n    const data = [...new Map(mergeData.map(item =>\n        [+item.id, item])).values()];\n    return data;\n}\n\n\nconst reducer = (state = initialState, { type, payload }) => {\n    switch (type) {\n        case LOAD_PRODUCT:\n            return {\n                ...state,\n                products: checkAndAddData(state.products, payload)\n            }\n        case UPDATE_PRODUCT:\n            return {\n                ...state,\n                products: updateProduct(state.products, payload),\n            }\n        case DELETE_PRODUCT:\n            return {\n                ...state,\n                products: state.products.filter(list => list.id !== payload)\n            }\n\n        case ADD_PRODUCT:\n            return {\n                ...state,\n                products: [...state.products, payload]\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport default createStore(reducer, initialState);","import { Provider } from 'react-redux';\nimport './App.css';\nimport { RouterPage } from './pages'\nimport Store from './reduxStore'\n\nfunction App() {\n  return (\n    <Provider store={Store}>\n      <div className=\"App\">\n        <RouterPage />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}